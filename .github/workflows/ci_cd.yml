name: Terraform and Ansible Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: |
          set -e
          terraform apply -auto-approve || {
            echo "Terraform apply failed. Running destroy..."
            terraform destroy -auto-approve
            exit 1
          }
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Public IP from Terraform
        run: |
            echo "[web]" > ../ansible/inventory
            public_ip=$(terraform output -no-color public_ip | awk '/^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$/ {print $1}')
            echo "$public_ip ansible_user=ubuntu" >> ../ansible/inventory
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload ansible artifact
        uses: actions/upload-artifact@v3
        with:
          name: ansible-artifact
          path: ansible/

      - name: Upload Terraform State
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: terraform

  destroy:
    runs-on: ubuntu-latest
    needs: terraform
    if: ${{ failure() }}
    steps:
      - name: Download Terraform State
        uses: actions/download-artifact@v3
        with:
          name: terraform-state

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Fix File Permissions
        run: |
          chmod +x .terraform/providers/registry.terraform.io/hashicorp/aws/4.67.0/linux_amd64/terraform-provider-aws_v4.67.0_x5

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  ansible:
    runs-on: ubuntu-latest
    needs: [terraform]
    if: ${{ needs.terraform.result == 'success' }}
    steps:

      - name: Download ansible artifact
        uses: actions/download-artifact@v3
        with:
          name: ansible-artifact

      - name: Run Ansible Playbook
        id: ansible
        run: |
          cat inventory
          ansible-playbook -i inventory playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_PRIVATE_KEY_FILE: ${{ secrets.SSH_PRIVATE_KEY }}
